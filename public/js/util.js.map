{"version":3,"names":[],"mappings":"","sources":["util.js"],"sourcesContent":["var deepCopy = function(obj) {\r\n\tvar str, newObj = obj.constructor === Array ? [] : {};\r\n\tif(typeof obj !== 'object'){\r\n\t\treturn;\r\n\t} else if (window.JSON) {\r\n\t\tstr = JSON.stringify(obj);\r\n\t\tnewObj = JSON.parse(str);\r\n\t} else {\r\n\t\tfor(var i in obj) {\r\n\t\t\tnewObj[i] = typeof obj[i] === 'object' ? this.deepCopy(obj[i]) : obj[i];\r\n\t\t}\r\n\t}\r\n\treturn newObj;\r\n};\r\n\r\nvar position = function(elm1, elm2) {\r\n\tvar elm2 = elm2 || document.body;\r\n\tvar left = 0, top = 0;\r\n\tdo {\r\n\t\tleft += elm1.offsetLeft;\r\n\t\ttop += elm1.offsetTop;\r\n\t} while((elm1 = elm1.offsetParent) && elm1 !== elm2)\r\n\treturn {left: left, top: top}\r\n};\r\n\r\nvar type = function(item) {\r\n\tvar result = Object.prototype.toString.call(item).replace('[object ','').replace(']','');\r\n\treturn result;\r\n};\r\n\r\nvar util = {\r\n\tdeepCopy: deepCopy,\r\n\tposition: position,\r\n\ttype: type\r\n};\r\nexport default util;"],"file":"util.js"}